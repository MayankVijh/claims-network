/**
 * Claims business network definition.
 */
namespace org.acme.claim


/**
 * An address type - it will work for US it does not need to yet work for international
 */
concept Address {
  o String addr1 
  o String addr2 optional
  o String addr3 optional
  o String city 
  o String county optional
  o String state 
  o String postcode
  o String country default = "USA"
}

enum PhoneType {
  o HOME_PHONE
  o WORK_PHONE
  o MOBILE_PHONE
  o TEXT
  o PAGER
  o OTHER  
}

/**
 * Phone concept
 */
 concept Phone {
   o String number
   o PhoneType phoneType
   o String otherType optional
 }

 enum ElectronicAddressType {
  o EMAIL
  o URL
}

/**
 * The modern address
 */
concept ElectronicAddress {
  o ElectronicAddressType electronicAddressType 
  o String emailAddress optional
  o String URL optional
}

/**
 * Languages
 */
enum LanguageCode {
  o EN_US
  o EN_UK
}

/**
 * A native language
 **/
concept Language {
  o LanguageCode languageCode
  o String englishName
  o String localName
}



/**
 * Health care is global
 */
concept Locale {
}

enum TimeZone {
  o UTC
  o UTC_1
  o UTC_2
  o UTC_3
  o UTC_4
  o UTCPLUS1
}

/**
 * Like java please
 */
concept Calendar {
  o Locale locale
  o TimeZone timezone
}

/**
 * A person's title
 */
enum Title {
  o Mr 
  o Mrs 
  o Ms 
  o Mx 
  o Miss
  o Master
}

/**
 * Person's name
 */
concept HumanName {
  o Title title optional
  o String prefix optional
  o String firstName
  o String middleName optional
  o String lastName
  o String displayName optional
  o String nickName optional
  o String suffix optional
}

/** 
 * Blob types - for attachments 
 */
abstract concept Blob {
  o String contents
}

concept JPEG extends Blob {
  o String mimeType default = "image/jpeg"
}

concept TIFF extends Blob {
  o String mimeType default = "image/tiff"
}

/**
 * Represent decimal numbers - like money
 */
concept BigDecimal {
  o Integer integerPart
  o Integer fractionPart
}

/**
 * A time period - from must be less than to
 */
concept Period {
  o DateTime from 
  o DateTime to 
}

/**
 * The state of the adjudicated claim
 */
 enum ClaimStatus {
   o HELD
   o PAID
 }

/**
 * Submitted claim type - payment or estimate?
 */
 enum DentalClaimType {
   o PRED               // Predetermination - not paid only estimate given
   o ENCOUNTER          // A real claim to be paid
   o EPSDT              // Medicaid Early and Periodic Screening, Diagnostic and Treatment
   o GENERATED          // Generated as a result of an adjudcation
 }

/**
 * Patient on the claim's relationship to the policyholer
 */
enum PatientsRelationshipToPolicyHolder {
  o SELF
  o SPOUSE
  o DEPENDENT
  o OTHER 
}

enum Gender {
  o MALE
  o FEMALE
  o OTHER
}

enum DiagnosisCodeListQualifier {
  o ICD9
  o ICD10
}

enum TreatmentResultingFrom {
  o OCCUPATIONAL_ILLNESS
  o AUTO_ACCIDENT
  o OTHER
}

/**
 * Supertype of all claims
 */
abstract asset Claim identified by claimId {
  o String claimId
}

/**
 * Abstract supertype of all Dental claims
 */
abstract asset DentalClaim extends Claim {
  o DentalClaimType dentalClaimType
}

/**
 * Attached to the claim
  */
asset DentalClaimAttachment identified by dentalClaimAttachmentId {
  o String dentalClaimAttachmentId
  o Blob blob
}

/**
 * Other coverage optionally submitted on a claim
 */
concept DentalSubmittedOtherCoverage {
  o HumanName nameOfPolicyHolder         // aka subscriber
  o DateTime dateOfBirth
  o Gender gender
  o String memberId optional            // id of subscriber/policyholder
  o String socialSecurityNumber optional  // one of these is mandatory
  o String planOrGroupNumber
  o PatientsRelationshipToPolicyHolder patientsRelationshipToPolicyHolder 
  o String planName
  o Address planAddress
}

/**
 * The incoming submitted claim,
 * Direct representation of a claim form containing textual information - as submitted
 */
@description("The incoming, submitted dental claim.")
asset SubmittedDentalClaim extends DentalClaim {
  @description("An optional identifier of a predetermination claim.")
  o String predeterminationClaimId optional            // Null if the claim type is a PRED
  // Insurance company, plan information
  o String planName
  o Address planAddress
  // Other coverage
  o DentalSubmittedOtherCoverage dentalSubmittedOtherCoverage optional
  // Policyholder/subscriber information
  o HumanName memberName
  o Address memberAddress 
  o DateTime memberDateOfBirth
  o Gender memberGender
  o String memberId                                 // ssn or plan-assigned id
  o String planOrGroupNumber                          // group identifier
  o String employerName                               // employer or group name
  // Patient information
  o PatientsRelationshipToPolicyHolder patientsRelationshipToPolicyHolder
  o HumanName patientName
  o Address patientAddress
  o DateTime patientDateOfBirth
  o Gender patientGender
  o String dentistPatientId                          // patient id assigned by the dentist
  // Record of services
  --> SubmittedDentalServiceLine[] submittedDentalServiceLines 
  o BigDecimal otherFees optional
  o BigDecimal totalFees optional                    // Calculated
  o Double amount
  o String missingTeeth optional                             // comma separated list of teeth numbers
  o DiagnosisCodeListQualifier diagnosisCodeListQualifier optional
  o String diagnosisCodeA optional
  o String diagnosisCodeB optional
  o String diagnosisCodeC optional
  o String diagnosisCodeD optional  
  o String remarks optional
  o Boolean patientGuardianSignature
  o Boolean subscriberSignature
  // Ancillary treatment
  o Integer placeOfTreatmentCode                     // 01-99, except 27-30, 35-40, 43-48, 58-59, 63-64, 66-70, 73-80, 82-98
  --> DentalClaimAttachment[] dentalClaimAttachments optional
  // Orthodontics
  o DateTime appliancePlaced optional
  o Integer monthsOfTreatment optional
  // Replacement prosthesis
  o DateTime priorPlacement optional  
  o TreatmentResultingFrom treatmentResultingFrom optional
  o DateTime dateOfAccident optional
  o String autoAccidentState optional
  // Billing provider
  o HumanName billingProviderName
  o Address billingProviderAddress
  o String billingProviderNpi
  o String billingProviderLicense
  o String billingProviderTin
  o String billingProviderPhoneNumber
  o String billingProviderAddlId optional  
  // Treating provider
  o HumanName treatingProviderName optional
  o String treatingProviderNpi
  o String treatingProviderLicense
  o Address treatingProviderAddress
  o String treatingProviderSpecialtyCode default = '122300000X'
  o String treatingProviderPhoneNumber
  o String treatingProviderAddlId optional
}

/**
 * Service line on a claim
 */
asset SubmittedDentalServiceLine identified by dentalServiceLineId {
    o String dentalServiceLineId 
    o Integer lineNumber
    o DateTime procedureDate
    o String areaOfOralCavity
    o String toothSystem
    o String toothNumberOrLetter
    o String toothSurface
    o String procedureCode
    o String diagPointer
    o Integer quantity
    o String description optional
    o BigDecimal fee optional
}

/**
 * The adjudicated claim - the claim as it's processed 
 */
asset AdjudicatedDentalClaim extends DentalClaim {
  o ClaimStatus claimStatus
  o Double amount
  --> SubmittedDentalClaim submittedDentalClaim
}

/**
 * The individual service lines on a claim
 */
asset AdjudicatedDentalServiceLine extends SubmittedDentalServiceLine {
  o Integer lineNumberx
  o String procedureCodex
  o Double chargeAmount
  o Double approvedAmount
  o Double allowedAmount
  o Double deniedAmount
  o Double copaymentAmount
  o Double deductibleAmount
  o Double paidAmount
  --> SubmittedDentalServiceLine submittedDentalServiceLine 
}

/**
 * Change to an member - MEMBERSHIP
 */
asset MemberChange identified by memberChangeId {
  o String memberChangeId
  o HumanName newName optional  
  o String newSocialSecurityNumber optional
  o ElectronicAddress[] newElectronicAddresses optional 
  o Phone[] newPhones optional 
  o Address newMemberAddress optional 
  o Period changePeriod optional // ?
  o Gender newGender optional
  // Existing member identifiers - one or more are needed to identify the member
  o String memberId optional                  // Insurance company's id 
  o HumanName memberName optional
  o String socialSecurityNumber optional
  o DateTime birthDate optional 
  o Gender gender optional 
  o Address address optional 
}

/**
 * A payment for a claim
 */
asset Payment identified by paymentId {
    o String paymentId
    o Double amount
    --> AdjudicatedDentalClaim adjudicatedDentalClaim
    --> BillingProvider billingProvider
}

/**
 * PROVIDER
 * A human provider 
 */
participant HumanProvider identified by npi {
  o String npi
  o HumanName name
}

/**
 * PROVIDER
 * A provider who can submit a claim and receives payment for it
 */
participant BillingProvider extends HumanProvider {
  o String tin
  --> SubmittedDentalClaim[] submittedDentalClaims optional
  --> Payment[] payments optional 
}

/**
 * Create a submitted claim
 */
transaction CreateSubmittedClaim {
}

/**
 * Return all the submitted claims
 */
 transaction GetAllSubmittedClaims {
 }

/**
 * Get a submitted claims
 */
 transaction GetSubmittedClaim {
 }

/*
 * Adjudicate a submitted claim
 */
transaction AdjudicateDentalClaim {
  --> SubmittedDentalClaim submittedDentalClaim
}

/**
 * Pay an adjudicated claim
 */
transaction PayDentalClaim {
  --> AdjudicatedDentalClaim adjudicatedDentalClaim
}

/**
 * Credit back over payments for a claim
 */
transaction PaymentCredits {
  --> AdjudicatedDentalClaim adjudicatedDentalClaim
}

/**
 * Experimental call out - to verify service codee
 */
 transaction PostTransaction {
}

/**
 * Inform the client that an adjudication has started
 */
event StartAdjudicationEvent {
  --> AdjudicatedDentalClaim adjudicatedDentalClaim
  --> SubmittedDentalClaim submittedDentalClaim
}

/**
 * Pay an adjudicated claim
 */
event PayDentalClaimEvent {
  --> AdjudicatedDentalClaim adjudicatedDentalClaim
}
